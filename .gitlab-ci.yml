stages:
  - build
  - checkstyle
  - test

image: gradle:7.3.3-jdk17-alpine

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

buildServer:
  stage: build
  script:
    - ./gradlew :server:build -x checkStyleMain -x compileTestJava -x processTestResources -x testClasses -x checkstyleTest -x check

buildCommons:
  stage: build
  script:
    - ./gradlew :commons:compileJava

buildClient:
  stage: build
  script:
    - ./gradlew :client:build -x checkStyleMain -x compileTestJava -x processTestResources -x testClasses -x checkstyleTest -x check


testCheckStyleCommons:
  stage: checkstyle
  needs:
    - buildCommons
  dependencies:
    - buildCommons
  script:
    - ./gradlew :commons:checkStyleMain  -x compileJava -x classes -x processResources -x jar

testCheckStyleServer:
  stage: checkstyle
  needs:
    - buildServer
  dependencies:
    - buildServer
  script:
    - ./gradlew :server:checkStyleMain -x compileJava -x classes -x processResources -x jar

testCheckStyleClient:
  stage: checkstyle
  needs:
    - buildClient
  dependencies:
    - buildClient
  script:
    - ./gradlew :client:checkStyleMain -x compileJava -x classes -x processResources -x jar


testAndCoverage:
  stage: test
  script:
    - ./gradlew test
    - ./gradlew AggregateJacocoReport
    # preserve coverage information in an easy-to-reach folder
    - mv build/reports/jacoco/aggregate/html ./coverage
    - mv build/reports/jacoco/aggregate/jacocoTestReport.xml ./coverage/report.xml
    - echo `cat coverage/index.html | grep -o -E "Total[^%]+?%" | sed -E "s/<.*>//" | sed -E "s/Total/TestCoverage:/"`
  artifacts:
    name: "Test reports from $CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG"
    when: always
    paths:
      - "*/build/test-results/test/TEST-*.xml"
      - "./coverage"
    reports:
      junit:
        - "*/build/test-results/test/TEST-*.xml"
  coverage: /TestCoverage:(\d+)%/

