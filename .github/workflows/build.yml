on: push

- name: Gradle Build Action
  # You may pin to the exact commit or the version.
  # uses: gradle/gradle-build-action@243af859f8ca30903d9d7f7936897ca0358ba691
  uses: gradle/gradle-build-action@v2.7.1
  with:
    # Gradle version to use. If specified, this Gradle version will be downloaded, added to the PATH and used for invoking Gradle.
    gradle-version: # optional
    # Path to the Gradle executable. If specified, this executable will be added to the PATH and used for invoking Gradle.
    gradle-executable: # optional
    # Path to the root directory of the build. Default is the root of the GitHub workspace.
    build-root-directory: # optional
    # When 'true', all caching is disabled. No entries will be written to or read from the cache.
    cache-disabled: # optional
    # When 'true', existing entries will be read from the cache but no entries will be written.
By default this value is 'false' for workflows on the GitHub default branch and 'true' for workflows on other branches.

    cache-read-only: # optional, default is ${{ github.event.repository != null && github.ref_name != github.event.repository.default_branch }}
    # When 'true', entries will not be restored from the cache but will be saved at the end of the Job. 
Setting this to 'true' implies cache-read-only will be 'false'.

    cache-write-only: # optional
    # Paths within Gradle User Home to cache.
    gradle-home-cache-includes: # optional, default is caches
notifications

    # Paths within Gradle User Home to exclude from cache.
    gradle-home-cache-excludes: # optional
    # Gradle command line arguments (supports multi-line input)
    arguments: # optional
    # When 'false', no Job Summary will be generated for the Job.
    generate-job-summary: # optional, default is true
    # Specifies if a GitHub dependency snapshot should be generated for each Gradle build, and if so, how. Valid values are 'disabled' (default), 'generate', 'generate-and-submit' and 'download-and-submit'.
    dependency-graph: # optional, default is disabled
    # When 'true', the action will not attempt to restore the Gradle User Home entries from other Jobs.
    gradle-home-cache-strict-match: # optional
    # Used to uniquely identify the current job invocation. Defaults to the matrix values for this job; this should not be overridden by users (INTERNAL).
    workflow-job-context: # optional, default is ${{ toJSON(matrix) }}
    # When 'true', the action will attempt to remove any stale/unused entries from the Gradle User Home prior to saving to the GitHub Actions cache.
    gradle-home-cache-cleanup: # optional
    # The GitHub token used to authenticate when submitting via the Dependency Submission API.
    github-token: # optional, default is ${{ github.token }}

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  buildServer:
    container: gradle:7.3.3-jdk17-alpine
    runs-on: ubuntu-latest
    steps:
      - run: ./gradlew :server:build -x checkStyleMain -x compileTestJava -x processTestResources -x testClasses -x checkstyleTest -x check

  buildCommons:
    container: gradle:7.3.3-jdk17-alpine
    runs-on: ubuntu-latest
    steps:
      - run: ./gradlew :commons:compileJava

  buildClient:
    container: gradle:7.3.3-jdk17-alpine
    runs-on: ubuntu-latest
    steps:
      - run: ./gradlew :client:build -x checkStyleMain -x compileTestJava -x processTestResources -x testClasses -x checkstyleTest -x check


  testCheckStyleCommons:
    container: gradle:7.3.3-jdk17-alpine
    runs-on: ubuntu-latest
    needs:
      - buildCommons
    steps:
      - run: ./gradlew :commons:checkStyleMain  -x compileJava -x classes -x processResources -x jar

  testCheckStyleServer:
    container: gradle:7.3.3-jdk17-alpine
    runs-on: ubuntu-latest
    needs:
      - buildServer
    steps:
      - run: ./gradlew :server:checkStyleMain -x compileJava -x classes -x processResources -x jar

  testCheckStyleClient:
    container: gradle:7.3.3-jdk17-alpine
    runs-on: ubuntu-latest
    needs:
      - buildClient
    steps:
      - run: ./gradlew :client:checkStyleMain -x compileJava -x classes -x processResources -x jar
